import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';
import {
  IsBoolean,
  IsEnum,
  IsNotEmpty,
  IsNumber,
  IsOptional,
  IsString,
  IsUUID,
  Max,
  Min
}                                           from 'class-validator';
import { IncidentSeverity, IncidentStatus } from '../entities/incident.entity';

export class CreateIncidentDto {
  @ApiProperty({
    description: 'Checklist execution ID that triggered this incident',
    example: '123e4567-e89b-12d3-a456-426614174000'
  })
  @IsUUID()
  @IsNotEmpty()
  executionId: string;

  @ApiProperty({
    description: 'Title of the incident',
    example: 'Low Performance Template Checklist Execution'
  })
  @IsString()
  @IsNotEmpty()
  title: string;

  @ApiProperty({
    description: 'Detailed description of the incident',
    example: 'Checklist template execution scored 65.50% (template score) which is below the threshold of 70%'
  })
  @IsString()
  @IsNotEmpty()
  description: string;

  @ApiProperty({
    description: 'Severity level of the incident',
    enum: IncidentSeverity,
    example: IncidentSeverity.MEDIUM
  })
  @IsEnum(IncidentSeverity)
  @IsNotEmpty()
  severity: IncidentSeverity;

  @ApiPropertyOptional({
    description: 'Current status of the incident',
    enum: IncidentStatus,
    example: IncidentStatus.OPEN,
    default: IncidentStatus.OPEN
  })
  @IsEnum(IncidentStatus)
  @IsOptional()
  status?: IncidentStatus;

  @ApiProperty({
    description: 'Performance score that triggered the incident',
    example: 65.50,
    minimum: 0,
    maximum: 100
  })
  @IsNumber({maxDecimalPlaces: 2})
  @Min(0)
  @Max(100)
  @IsNotEmpty()
  performanceScore: number;

  @ApiProperty({
    description: 'Threshold score that was not met',
    example: 70.00,
    minimum: 0,
    maximum: 100
  })
  @IsNumber({maxDecimalPlaces: 2})
  @Min(0)
  @Max(100)
  @IsNotEmpty()
  thresholdScore: number;

  @ApiProperty({
    description: 'Vehicle ID associated with the incident',
    example: '123e4567-e89b-12d3-a456-426614174000'
  })
  @IsUUID()
  @IsNotEmpty()
  vehicleId: string;

  @ApiProperty({
    description: 'User ID who reported/triggered the incident',
    example: '123e4567-e89b-12d3-a456-426614174000'
  })
  @IsUUID()
  @IsNotEmpty()
  reportedByUserId: string;

  @ApiPropertyOptional({
    description: 'User ID assigned to handle the incident',
    example: '123e4567-e89b-12d3-a456-426614174000'
  })
  @IsUUID()
  @IsOptional()
  assignedToUserId?: string;

  @ApiPropertyOptional({
    description: 'Whether this incident was automatically generated by the system',
    example: true,
    default: false
  })
  @IsBoolean()
  @IsOptional()
  autoGenerated?: boolean;

  @ApiPropertyOptional({
    description: 'Categories that failed and contributed to the incident',
    type: [ String ],
    example: [ 'safety_check', 'engine_inspection' ]
  })
  @IsOptional()
  failedCategories?: string[];

  @ApiPropertyOptional({
    description: 'Additional notes about the incident',
    example: 'Multiple safety checks failed during routine inspection'
  })
  @IsString()
  @IsOptional()
  resolutionNotes?: string;
}
